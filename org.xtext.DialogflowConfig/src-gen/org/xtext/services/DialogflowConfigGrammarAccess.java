/*
 * generated by Xtext 2.16.0
 */
package org.xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class DialogflowConfigGrammarAccess extends AbstractGrammarElementFinder {
	
	public class AgentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.DialogflowConfig.Agent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAgentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cElementsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cElementsAbstractElementParserRuleCall_2_0 = (RuleCall)cElementsAssignment_2.eContents().get(0);
		
		//Agent:
		//	'Agent' name=ID
		//	elements+=AbstractElement*;
		@Override public ParserRule getRule() { return rule; }
		
		//'Agent' name=ID elements+=AbstractElement*
		public Group getGroup() { return cGroup; }
		
		//'Agent'
		public Keyword getAgentKeyword_0() { return cAgentKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//elements+=AbstractElement*
		public Assignment getElementsAssignment_2() { return cElementsAssignment_2; }
		
		//AbstractElement
		public RuleCall getElementsAbstractElementParserRuleCall_2_0() { return cElementsAbstractElementParserRuleCall_2_0; }
	}
	public class AbstractElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.DialogflowConfig.AbstractElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIntentParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEntityTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AbstractElement:
		//	Intent | EntityType;
		@Override public ParserRule getRule() { return rule; }
		
		//Intent | EntityType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Intent
		public RuleCall getIntentParserRuleCall_0() { return cIntentParserRuleCall_0; }
		
		//EntityType
		public RuleCall getEntityTypeParserRuleCall_1() { return cEntityTypeParserRuleCall_1; }
	}
	public class IntentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.DialogflowConfig.Intent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIntentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cParametersKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cParametersAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_2_1_0 = (RuleCall)cParametersAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cContextsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Group cGroup_3_1_0 = (Group)cGroup_3_1.eContents().get(0);
		private final Keyword cInKeyword_3_1_0_0 = (Keyword)cGroup_3_1_0.eContents().get(0);
		private final Assignment cInputContextsAssignment_3_1_0_1 = (Assignment)cGroup_3_1_0.eContents().get(1);
		private final RuleCall cInputContextsInputContextParserRuleCall_3_1_0_1_0 = (RuleCall)cInputContextsAssignment_3_1_0_1.eContents().get(0);
		private final Group cGroup_3_1_1 = (Group)cGroup_3_1.eContents().get(1);
		private final Keyword cOutKeyword_3_1_1_0 = (Keyword)cGroup_3_1_1.eContents().get(0);
		private final Assignment cAffectedContextsAssignment_3_1_1_1 = (Assignment)cGroup_3_1_1.eContents().get(1);
		private final RuleCall cAffectedContextsOutputContextParserRuleCall_3_1_1_1_0 = (RuleCall)cAffectedContextsAssignment_3_1_1_1.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cAlternatives_4.eContents().get(0);
		private final Keyword cFileKeyword_4_0_0 = (Keyword)cGroup_4_0.eContents().get(0);
		private final Assignment cFileAssignment_4_0_1 = (Assignment)cGroup_4_0.eContents().get(1);
		private final RuleCall cFileSTRINGTerminalRuleCall_4_0_1_0 = (RuleCall)cFileAssignment_4_0_1.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final Keyword cTrainedKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Keyword cWithKeyword_4_1_1 = (Keyword)cGroup_4_1.eContents().get(1);
		private final Assignment cTrainingPhrasesAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cTrainingPhrasesTrainingPhraseParserRuleCall_4_1_2_0 = (RuleCall)cTrainingPhrasesAssignment_4_1_2.eContents().get(0);
		private final Group cGroup_4_1_3 = (Group)cGroup_4_1.eContents().get(3);
		private final Keyword cCommaKeyword_4_1_3_0 = (Keyword)cGroup_4_1_3.eContents().get(0);
		private final Assignment cTrainingPhrasesAssignment_4_1_3_1 = (Assignment)cGroup_4_1_3.eContents().get(1);
		private final RuleCall cTrainingPhrasesTrainingPhraseParserRuleCall_4_1_3_1_0 = (RuleCall)cTrainingPhrasesAssignment_4_1_3_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cResponseKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cResponsesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cResponsesSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cResponsesAssignment_5_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_6 = (UnorderedGroup)cGroup.eContents().get(6);
		private final Assignment cWebHookAssignment_6_0 = (Assignment)cUnorderedGroup_6.eContents().get(0);
		private final Keyword cWebHookWebhookKeyword_6_0_0 = (Keyword)cWebHookAssignment_6_0.eContents().get(0);
		private final Assignment cWebHookForSlotFillingAssignment_6_1 = (Assignment)cUnorderedGroup_6.eContents().get(1);
		private final Keyword cWebHookForSlotFillingWebhook_for_slot_fillingKeyword_6_1_0 = (Keyword)cWebHookForSlotFillingAssignment_6_1.eContents().get(0);
		
		//Intent:
		//	'Intent' name=ID ('parameters' parameters+=Parameter*)? ('contexts' (('in' inputContexts+=InputContext+)? ('out'
		//	affectedContexts+=OutputContext+)?))? ('file' file=STRING
		//	| 'trained' 'with' trainingPhrases+=TrainingPhrase (',' trainingPhrases+=TrainingPhrase)*)? ('response'
		//	responses+=STRING+)? (webHook?='webhook'? & webHookForSlotFilling?='webhook_for_slot_filling'?);
		@Override public ParserRule getRule() { return rule; }
		
		//'Intent' name=ID ('parameters' parameters+=Parameter*)? ('contexts' (('in' inputContexts+=InputContext+)? ('out'
		//affectedContexts+=OutputContext+)?))? ('file' file=STRING | 'trained' 'with' trainingPhrases+=TrainingPhrase (','
		//trainingPhrases+=TrainingPhrase)*)? ('response' responses+=STRING+)? (webHook?='webhook'? &
		//webHookForSlotFilling?='webhook_for_slot_filling'?)
		public Group getGroup() { return cGroup; }
		
		//'Intent'
		public Keyword getIntentKeyword_0() { return cIntentKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('parameters' parameters+=Parameter*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'parameters'
		public Keyword getParametersKeyword_2_0() { return cParametersKeyword_2_0; }
		
		//parameters+=Parameter*
		public Assignment getParametersAssignment_2_1() { return cParametersAssignment_2_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_2_1_0() { return cParametersParameterParserRuleCall_2_1_0; }
		
		//('contexts' (('in' inputContexts+=InputContext+)? ('out' affectedContexts+=OutputContext+)?))?
		public Group getGroup_3() { return cGroup_3; }
		
		//'contexts'
		public Keyword getContextsKeyword_3_0() { return cContextsKeyword_3_0; }
		
		//('in' inputContexts+=InputContext+)? ('out' affectedContexts+=OutputContext+)?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//('in' inputContexts+=InputContext+)?
		public Group getGroup_3_1_0() { return cGroup_3_1_0; }
		
		//'in'
		public Keyword getInKeyword_3_1_0_0() { return cInKeyword_3_1_0_0; }
		
		//inputContexts+=InputContext+
		public Assignment getInputContextsAssignment_3_1_0_1() { return cInputContextsAssignment_3_1_0_1; }
		
		//InputContext
		public RuleCall getInputContextsInputContextParserRuleCall_3_1_0_1_0() { return cInputContextsInputContextParserRuleCall_3_1_0_1_0; }
		
		//('out' affectedContexts+=OutputContext+)?
		public Group getGroup_3_1_1() { return cGroup_3_1_1; }
		
		//'out'
		public Keyword getOutKeyword_3_1_1_0() { return cOutKeyword_3_1_1_0; }
		
		//affectedContexts+=OutputContext+
		public Assignment getAffectedContextsAssignment_3_1_1_1() { return cAffectedContextsAssignment_3_1_1_1; }
		
		//OutputContext
		public RuleCall getAffectedContextsOutputContextParserRuleCall_3_1_1_1_0() { return cAffectedContextsOutputContextParserRuleCall_3_1_1_1_0; }
		
		//('file' file=STRING | 'trained' 'with' trainingPhrases+=TrainingPhrase (',' trainingPhrases+=TrainingPhrase)*)?
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//'file' file=STRING
		public Group getGroup_4_0() { return cGroup_4_0; }
		
		//'file'
		public Keyword getFileKeyword_4_0_0() { return cFileKeyword_4_0_0; }
		
		//file=STRING
		public Assignment getFileAssignment_4_0_1() { return cFileAssignment_4_0_1; }
		
		//STRING
		public RuleCall getFileSTRINGTerminalRuleCall_4_0_1_0() { return cFileSTRINGTerminalRuleCall_4_0_1_0; }
		
		//'trained' 'with' trainingPhrases+=TrainingPhrase (',' trainingPhrases+=TrainingPhrase)*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//'trained'
		public Keyword getTrainedKeyword_4_1_0() { return cTrainedKeyword_4_1_0; }
		
		//'with'
		public Keyword getWithKeyword_4_1_1() { return cWithKeyword_4_1_1; }
		
		//trainingPhrases+=TrainingPhrase
		public Assignment getTrainingPhrasesAssignment_4_1_2() { return cTrainingPhrasesAssignment_4_1_2; }
		
		//TrainingPhrase
		public RuleCall getTrainingPhrasesTrainingPhraseParserRuleCall_4_1_2_0() { return cTrainingPhrasesTrainingPhraseParserRuleCall_4_1_2_0; }
		
		//(',' trainingPhrases+=TrainingPhrase)*
		public Group getGroup_4_1_3() { return cGroup_4_1_3; }
		
		//','
		public Keyword getCommaKeyword_4_1_3_0() { return cCommaKeyword_4_1_3_0; }
		
		//trainingPhrases+=TrainingPhrase
		public Assignment getTrainingPhrasesAssignment_4_1_3_1() { return cTrainingPhrasesAssignment_4_1_3_1; }
		
		//TrainingPhrase
		public RuleCall getTrainingPhrasesTrainingPhraseParserRuleCall_4_1_3_1_0() { return cTrainingPhrasesTrainingPhraseParserRuleCall_4_1_3_1_0; }
		
		//('response' responses+=STRING+)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'response'
		public Keyword getResponseKeyword_5_0() { return cResponseKeyword_5_0; }
		
		//responses+=STRING+
		public Assignment getResponsesAssignment_5_1() { return cResponsesAssignment_5_1; }
		
		//STRING
		public RuleCall getResponsesSTRINGTerminalRuleCall_5_1_0() { return cResponsesSTRINGTerminalRuleCall_5_1_0; }
		
		//webHook?='webhook'? & webHookForSlotFilling?='webhook_for_slot_filling'?
		public UnorderedGroup getUnorderedGroup_6() { return cUnorderedGroup_6; }
		
		//webHook?='webhook'?
		public Assignment getWebHookAssignment_6_0() { return cWebHookAssignment_6_0; }
		
		//'webhook'
		public Keyword getWebHookWebhookKeyword_6_0_0() { return cWebHookWebhookKeyword_6_0_0; }
		
		//webHookForSlotFilling?='webhook_for_slot_filling'?
		public Assignment getWebHookForSlotFillingAssignment_6_1() { return cWebHookForSlotFillingAssignment_6_1; }
		
		//'webhook_for_slot_filling'
		public Keyword getWebHookForSlotFillingWebhook_for_slot_fillingKeyword_6_1_0() { return cWebHookForSlotFillingWebhook_for_slot_fillingKeyword_6_1_0; }
	}
	public class InputContextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.DialogflowConfig.InputContext");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeEntityTypeCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeEntityTypeIDTerminalRuleCall_0_1 = (RuleCall)cTypeEntityTypeCrossReference_0.eContents().get(1);
		
		//InputContext:
		//	type=[EntityType];
		@Override public ParserRule getRule() { return rule; }
		
		//type=[EntityType]
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//[EntityType]
		public CrossReference getTypeEntityTypeCrossReference_0() { return cTypeEntityTypeCrossReference_0; }
		
		//ID
		public RuleCall getTypeEntityTypeIDTerminalRuleCall_0_1() { return cTypeEntityTypeIDTerminalRuleCall_0_1; }
	}
	public class OutputContextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.DialogflowConfig.OutputContext");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cTypeEntityTypeCrossReference_0_0 = (CrossReference)cTypeAssignment_0.eContents().get(0);
		private final RuleCall cTypeEntityTypeIDTerminalRuleCall_0_0_1 = (RuleCall)cTypeEntityTypeCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLifespanKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cLifespanAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cLifespanINTTerminalRuleCall_1_1_0 = (RuleCall)cLifespanAssignment_1_1.eContents().get(0);
		
		//OutputContext:
		//	type=[EntityType] ('lifespan' lifespan=INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//type=[EntityType] ('lifespan' lifespan=INT)?
		public Group getGroup() { return cGroup; }
		
		//type=[EntityType]
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//[EntityType]
		public CrossReference getTypeEntityTypeCrossReference_0_0() { return cTypeEntityTypeCrossReference_0_0; }
		
		//ID
		public RuleCall getTypeEntityTypeIDTerminalRuleCall_0_0_1() { return cTypeEntityTypeIDTerminalRuleCall_0_0_1; }
		
		//('lifespan' lifespan=INT)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'lifespan'
		public Keyword getLifespanKeyword_1_0() { return cLifespanKeyword_1_0; }
		
		//lifespan=INT
		public Assignment getLifespanAssignment_1_1() { return cLifespanAssignment_1_1; }
		
		//INT
		public RuleCall getLifespanINTTerminalRuleCall_1_1_0() { return cLifespanINTTerminalRuleCall_1_1_0; }
	}
	public class TrainingPhraseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.DialogflowConfig.TrainingPhrase");
		private final Assignment cDataAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cDataAbstractWordParserRuleCall_0 = (RuleCall)cDataAssignment.eContents().get(0);
		
		//TrainingPhrase:
		//	data+=AbstractWord+;
		@Override public ParserRule getRule() { return rule; }
		
		//data+=AbstractWord+
		public Assignment getDataAssignment() { return cDataAssignment; }
		
		//AbstractWord
		public RuleCall getDataAbstractWordParserRuleCall_0() { return cDataAbstractWordParserRuleCall_0; }
	}
	public class AbstractWordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.DialogflowConfig.AbstractWord");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTextParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTokenParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AbstractWord:
		//	Text | Token;
		@Override public ParserRule getRule() { return rule; }
		
		//Text | Token
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Text
		public RuleCall getTextParserRuleCall_0() { return cTextParserRuleCall_0; }
		
		//Token
		public RuleCall getTokenParserRuleCall_1() { return cTokenParserRuleCall_1; }
	}
	public class TextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.DialogflowConfig.Text");
		private final Assignment cTextAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cTextSTRINGTerminalRuleCall_0 = (RuleCall)cTextAssignment.eContents().get(0);
		
		//Text:
		//	text=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//text=STRING
		public Assignment getTextAssignment() { return cTextAssignment; }
		
		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_0() { return cTextSTRINGTerminalRuleCall_0; }
	}
	public class TokenElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.DialogflowConfig.Token");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeEntityTypeCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeEntityTypeIDTerminalRuleCall_0_1 = (RuleCall)cTypeEntityTypeCrossReference_0.eContents().get(1);
		
		//Token:
		//	type=[EntityType];
		@Override public ParserRule getRule() { return rule; }
		
		//type=[EntityType]
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//[EntityType]
		public CrossReference getTypeEntityTypeCrossReference_0() { return cTypeEntityTypeCrossReference_0; }
		
		//ID
		public RuleCall getTypeEntityTypeIDTerminalRuleCall_0_1() { return cTypeEntityTypeIDTerminalRuleCall_0_1; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.DialogflowConfig.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cTypeEntityTypeCrossReference_0_0 = (CrossReference)cTypeAssignment_0.eContents().get(0);
		private final RuleCall cTypeEntityTypeIDTerminalRuleCall_0_0_1 = (RuleCall)cTypeEntityTypeCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1_1 = (UnorderedGroup)cGroup_1.eContents().get(1);
		private final Assignment cRequiredAssignment_1_1_0 = (Assignment)cUnorderedGroup_1_1.eContents().get(0);
		private final Keyword cRequiredRequiredKeyword_1_1_0_0 = (Keyword)cRequiredAssignment_1_1_0.eContents().get(0);
		private final Assignment cListAssignment_1_1_1 = (Assignment)cUnorderedGroup_1_1.eContents().get(1);
		private final Keyword cListListKeyword_1_1_1_0 = (Keyword)cListAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//Parameter:
		//	type=[EntityType] ('(' (required?='required'? & list?='list'?)
		//	')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//type=[EntityType] ('(' (required?='required'? & list?='list'?) ')')?
		public Group getGroup() { return cGroup; }
		
		//type=[EntityType]
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//[EntityType]
		public CrossReference getTypeEntityTypeCrossReference_0_0() { return cTypeEntityTypeCrossReference_0_0; }
		
		//ID
		public RuleCall getTypeEntityTypeIDTerminalRuleCall_0_0_1() { return cTypeEntityTypeIDTerminalRuleCall_0_0_1; }
		
		//('(' (required?='required'? & list?='list'?) ')')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_0() { return cLeftParenthesisKeyword_1_0; }
		
		//required?='required'? & list?='list'?
		public UnorderedGroup getUnorderedGroup_1_1() { return cUnorderedGroup_1_1; }
		
		//required?='required'?
		public Assignment getRequiredAssignment_1_1_0() { return cRequiredAssignment_1_1_0; }
		
		//'required'
		public Keyword getRequiredRequiredKeyword_1_1_0_0() { return cRequiredRequiredKeyword_1_1_0_0; }
		
		//list?='list'?
		public Assignment getListAssignment_1_1_1() { return cListAssignment_1_1_1; }
		
		//'list'
		public Keyword getListListKeyword_1_1_1_0() { return cListListKeyword_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_2() { return cRightParenthesisKeyword_1_2; }
	}
	public class EntityTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.DialogflowConfig.EntityType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cDynamicAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final Keyword cDynamicDynamicKeyword_2_0_0 = (Keyword)cDynamicAssignment_2_0.eContents().get(0);
		private final Assignment cBuiltInAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final Keyword cBuiltInBuiltinKeyword_2_1_0 = (Keyword)cBuiltInAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cAlternatives_2.eContents().get(2);
		private final Keyword cValuesKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cValuesAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cValuesEntityParserRuleCall_2_2_1_0 = (RuleCall)cValuesAssignment_2_2_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cStateKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cIsOverridableAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final Keyword cIsOverridableOverridableKeyword_3_0_1_0 = (Keyword)cIsOverridableAssignment_3_0_1.eContents().get(0);
		private final Assignment cIsEnumAssignment_3_1 = (Assignment)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cIsEnumEnumKeyword_3_1_0 = (Keyword)cIsEnumAssignment_3_1.eContents().get(0);
		private final Assignment cAutomatedExpansionAssignment_3_2 = (Assignment)cUnorderedGroup_3.eContents().get(2);
		private final Keyword cAutomatedExpansionAuto_expandKeyword_3_2_0 = (Keyword)cAutomatedExpansionAssignment_3_2.eContents().get(0);
		private final Assignment cAllowFuzzyExtractionAssignment_3_3 = (Assignment)cUnorderedGroup_3.eContents().get(3);
		private final Keyword cAllowFuzzyExtractionFuzzy_extractKeyword_3_3_0 = (Keyword)cAllowFuzzyExtractionAssignment_3_3.eContents().get(0);
		
		//EntityType:
		//	'Type' name=ID (dynamic?='dynamic' | builtIn?='builtin' |
		//	'values' values+=Entity+) ('state'
		//	isOverridable?='overridable'?
		//	& isEnum?='enum'?
		//	& automatedExpansion?='auto_expand'?
		//	& allowFuzzyExtraction?='fuzzy_extract'?)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'Type' name=ID (dynamic?='dynamic' | builtIn?='builtin' | 'values' values+=Entity+) ('state'
		//isOverridable?='overridable'? & isEnum?='enum'? & automatedExpansion?='auto_expand'? &
		//allowFuzzyExtraction?='fuzzy_extract'?)?
		public Group getGroup() { return cGroup; }
		
		//'Type'
		public Keyword getTypeKeyword_0() { return cTypeKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//dynamic?='dynamic' | builtIn?='builtin' | 'values' values+=Entity+
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//dynamic?='dynamic'
		public Assignment getDynamicAssignment_2_0() { return cDynamicAssignment_2_0; }
		
		//'dynamic'
		public Keyword getDynamicDynamicKeyword_2_0_0() { return cDynamicDynamicKeyword_2_0_0; }
		
		//builtIn?='builtin'
		public Assignment getBuiltInAssignment_2_1() { return cBuiltInAssignment_2_1; }
		
		//'builtin'
		public Keyword getBuiltInBuiltinKeyword_2_1_0() { return cBuiltInBuiltinKeyword_2_1_0; }
		
		//'values' values+=Entity+
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//'values'
		public Keyword getValuesKeyword_2_2_0() { return cValuesKeyword_2_2_0; }
		
		//values+=Entity+
		public Assignment getValuesAssignment_2_2_1() { return cValuesAssignment_2_2_1; }
		
		//Entity
		public RuleCall getValuesEntityParserRuleCall_2_2_1_0() { return cValuesEntityParserRuleCall_2_2_1_0; }
		
		//('state' isOverridable?='overridable'? & isEnum?='enum'? & automatedExpansion?='auto_expand'? &
		//allowFuzzyExtraction?='fuzzy_extract'?)?
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }
		
		//'state' isOverridable?='overridable'?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'state'
		public Keyword getStateKeyword_3_0_0() { return cStateKeyword_3_0_0; }
		
		//isOverridable?='overridable'?
		public Assignment getIsOverridableAssignment_3_0_1() { return cIsOverridableAssignment_3_0_1; }
		
		//'overridable'
		public Keyword getIsOverridableOverridableKeyword_3_0_1_0() { return cIsOverridableOverridableKeyword_3_0_1_0; }
		
		//isEnum?='enum'?
		public Assignment getIsEnumAssignment_3_1() { return cIsEnumAssignment_3_1; }
		
		//'enum'
		public Keyword getIsEnumEnumKeyword_3_1_0() { return cIsEnumEnumKeyword_3_1_0; }
		
		//automatedExpansion?='auto_expand'?
		public Assignment getAutomatedExpansionAssignment_3_2() { return cAutomatedExpansionAssignment_3_2; }
		
		//'auto_expand'
		public Keyword getAutomatedExpansionAuto_expandKeyword_3_2_0() { return cAutomatedExpansionAuto_expandKeyword_3_2_0; }
		
		//allowFuzzyExtraction?='fuzzy_extract'?
		public Assignment getAllowFuzzyExtractionAssignment_3_3() { return cAllowFuzzyExtractionAssignment_3_3; }
		
		//'fuzzy_extract'
		public Keyword getAllowFuzzyExtractionFuzzy_extractKeyword_3_3_0() { return cAllowFuzzyExtractionFuzzy_extractKeyword_3_3_0; }
	}
	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.DialogflowConfig.Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameSTRINGTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cSynonymsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cSynonymsSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cSynonymsAssignment_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//Entity:
		//	name=STRING ('(' synonyms+=STRING* ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=STRING ('(' synonyms+=STRING* ')')?
		public Group getGroup() { return cGroup; }
		
		//name=STRING
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0_0() { return cNameSTRINGTerminalRuleCall_0_0; }
		
		//('(' synonyms+=STRING* ')')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_0() { return cLeftParenthesisKeyword_1_0; }
		
		//synonyms+=STRING*
		public Assignment getSynonymsAssignment_1_1() { return cSynonymsAssignment_1_1; }
		
		//STRING
		public RuleCall getSynonymsSTRINGTerminalRuleCall_1_1_0() { return cSynonymsSTRINGTerminalRuleCall_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_2() { return cRightParenthesisKeyword_1_2; }
	}
	
	
	private final AgentElements pAgent;
	private final AbstractElementElements pAbstractElement;
	private final IntentElements pIntent;
	private final InputContextElements pInputContext;
	private final OutputContextElements pOutputContext;
	private final TrainingPhraseElements pTrainingPhrase;
	private final AbstractWordElements pAbstractWord;
	private final TextElements pText;
	private final TokenElements pToken;
	private final ParameterElements pParameter;
	private final EntityTypeElements pEntityType;
	private final EntityElements pEntity;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DialogflowConfigGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pAgent = new AgentElements();
		this.pAbstractElement = new AbstractElementElements();
		this.pIntent = new IntentElements();
		this.pInputContext = new InputContextElements();
		this.pOutputContext = new OutputContextElements();
		this.pTrainingPhrase = new TrainingPhraseElements();
		this.pAbstractWord = new AbstractWordElements();
		this.pText = new TextElements();
		this.pToken = new TokenElements();
		this.pParameter = new ParameterElements();
		this.pEntityType = new EntityTypeElements();
		this.pEntity = new EntityElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.DialogflowConfig".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Agent:
	//	'Agent' name=ID
	//	elements+=AbstractElement*;
	public AgentElements getAgentAccess() {
		return pAgent;
	}
	
	public ParserRule getAgentRule() {
		return getAgentAccess().getRule();
	}
	
	//AbstractElement:
	//	Intent | EntityType;
	public AbstractElementElements getAbstractElementAccess() {
		return pAbstractElement;
	}
	
	public ParserRule getAbstractElementRule() {
		return getAbstractElementAccess().getRule();
	}
	
	//Intent:
	//	'Intent' name=ID ('parameters' parameters+=Parameter*)? ('contexts' (('in' inputContexts+=InputContext+)? ('out'
	//	affectedContexts+=OutputContext+)?))? ('file' file=STRING
	//	| 'trained' 'with' trainingPhrases+=TrainingPhrase (',' trainingPhrases+=TrainingPhrase)*)? ('response'
	//	responses+=STRING+)? (webHook?='webhook'? & webHookForSlotFilling?='webhook_for_slot_filling'?);
	public IntentElements getIntentAccess() {
		return pIntent;
	}
	
	public ParserRule getIntentRule() {
		return getIntentAccess().getRule();
	}
	
	//InputContext:
	//	type=[EntityType];
	public InputContextElements getInputContextAccess() {
		return pInputContext;
	}
	
	public ParserRule getInputContextRule() {
		return getInputContextAccess().getRule();
	}
	
	//OutputContext:
	//	type=[EntityType] ('lifespan' lifespan=INT)?;
	public OutputContextElements getOutputContextAccess() {
		return pOutputContext;
	}
	
	public ParserRule getOutputContextRule() {
		return getOutputContextAccess().getRule();
	}
	
	//TrainingPhrase:
	//	data+=AbstractWord+;
	public TrainingPhraseElements getTrainingPhraseAccess() {
		return pTrainingPhrase;
	}
	
	public ParserRule getTrainingPhraseRule() {
		return getTrainingPhraseAccess().getRule();
	}
	
	//AbstractWord:
	//	Text | Token;
	public AbstractWordElements getAbstractWordAccess() {
		return pAbstractWord;
	}
	
	public ParserRule getAbstractWordRule() {
		return getAbstractWordAccess().getRule();
	}
	
	//Text:
	//	text=STRING;
	public TextElements getTextAccess() {
		return pText;
	}
	
	public ParserRule getTextRule() {
		return getTextAccess().getRule();
	}
	
	//Token:
	//	type=[EntityType];
	public TokenElements getTokenAccess() {
		return pToken;
	}
	
	public ParserRule getTokenRule() {
		return getTokenAccess().getRule();
	}
	
	//Parameter:
	//	type=[EntityType] ('(' (required?='required'? & list?='list'?)
	//	')')?;
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//EntityType:
	//	'Type' name=ID (dynamic?='dynamic' | builtIn?='builtin' |
	//	'values' values+=Entity+) ('state'
	//	isOverridable?='overridable'?
	//	& isEnum?='enum'?
	//	& automatedExpansion?='auto_expand'?
	//	& allowFuzzyExtraction?='fuzzy_extract'?)?;
	public EntityTypeElements getEntityTypeAccess() {
		return pEntityType;
	}
	
	public ParserRule getEntityTypeRule() {
		return getEntityTypeAccess().getRule();
	}
	
	//Entity:
	//	name=STRING ('(' synonyms+=STRING* ')')?;
	public EntityElements getEntityAccess() {
		return pEntity;
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
