/*
 * generated by Xtext 2.16.0
 */
grammar InternalDialogflowConfig;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.services.DialogflowConfigGrammarAccess;

}

@parser::members {

 	private DialogflowConfigGrammarAccess grammarAccess;

    public InternalDialogflowConfigParser(TokenStream input, DialogflowConfigGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Agent";
   	}

   	@Override
   	protected DialogflowConfigGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleAgent
entryRuleAgent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAgentRule()); }
	iv_ruleAgent=ruleAgent
	{ $current=$iv_ruleAgent.current; }
	EOF;

// Rule Agent
ruleAgent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Agent'
		{
			newLeafNode(otherlv_0, grammarAccess.getAgentAccess().getAgentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAgentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAgentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAgentAccess().getElementsAbstractElementParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleAbstractElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAgentRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"org.xtext.DialogflowConfig.AbstractElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleAbstractElement
entryRuleAbstractElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractElementRule()); }
	iv_ruleAbstractElement=ruleAbstractElement
	{ $current=$iv_ruleAbstractElement.current; }
	EOF;

// Rule AbstractElement
ruleAbstractElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getIntentParserRuleCall_0());
		}
		this_Intent_0=ruleIntent
		{
			$current = $this_Intent_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getEntityTypeParserRuleCall_1());
		}
		this_EntityType_1=ruleEntityType
		{
			$current = $this_EntityType_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIntent
entryRuleIntent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntentRule()); }
	iv_ruleIntent=ruleIntent
	{ $current=$iv_ruleIntent.current; }
	EOF;

// Rule Intent
ruleIntent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Intent'
		{
			newLeafNode(otherlv_0, grammarAccess.getIntentAccess().getIntentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getIntentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='parameters'
			{
				newLeafNode(otherlv_2, grammarAccess.getIntentAccess().getParametersKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIntentAccess().getParametersParameterParserRuleCall_2_1_0());
					}
					lv_parameters_3_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntentRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_3_0,
							"org.xtext.DialogflowConfig.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			otherlv_4='contexts'
			{
				newLeafNode(otherlv_4, grammarAccess.getIntentAccess().getContextsKeyword_3_0());
			}
			(
				(
					otherlv_5='in'
					{
						newLeafNode(otherlv_5, grammarAccess.getIntentAccess().getInKeyword_3_1_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getIntentAccess().getInputContextsInputContextParserRuleCall_3_1_0_1_0());
							}
							lv_inputContexts_6_0=ruleInputContext
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getIntentRule());
								}
								add(
									$current,
									"inputContexts",
									lv_inputContexts_6_0,
									"org.xtext.DialogflowConfig.InputContext");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
				(
					otherlv_7='out'
					{
						newLeafNode(otherlv_7, grammarAccess.getIntentAccess().getOutKeyword_3_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getIntentAccess().getAffectedContextsOutputContextParserRuleCall_3_1_1_1_0());
							}
							lv_affectedContexts_8_0=ruleOutputContext
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getIntentRule());
								}
								add(
									$current,
									"affectedContexts",
									lv_affectedContexts_8_0,
									"org.xtext.DialogflowConfig.OutputContext");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
			)
		)?
		(
			(
				otherlv_9='file'
				{
					newLeafNode(otherlv_9, grammarAccess.getIntentAccess().getFileKeyword_4_0_0());
				}
				(
					(
						lv_file_10_0=RULE_STRING
						{
							newLeafNode(lv_file_10_0, grammarAccess.getIntentAccess().getFileSTRINGTerminalRuleCall_4_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getIntentRule());
							}
							setWithLastConsumed(
								$current,
								"file",
								lv_file_10_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
			    |
			(
				otherlv_11='trained'
				{
					newLeafNode(otherlv_11, grammarAccess.getIntentAccess().getTrainedKeyword_4_1_0());
				}
				otherlv_12='with'
				{
					newLeafNode(otherlv_12, grammarAccess.getIntentAccess().getWithKeyword_4_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getIntentAccess().getTrainingPhrasesTrainingPhraseParserRuleCall_4_1_2_0());
						}
						lv_trainingPhrases_13_0=ruleTrainingPhrase
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIntentRule());
							}
							add(
								$current,
								"trainingPhrases",
								lv_trainingPhrases_13_0,
								"org.xtext.DialogflowConfig.TrainingPhrase");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_14=','
					{
						newLeafNode(otherlv_14, grammarAccess.getIntentAccess().getCommaKeyword_4_1_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getIntentAccess().getTrainingPhrasesTrainingPhraseParserRuleCall_4_1_3_1_0());
							}
							lv_trainingPhrases_15_0=ruleTrainingPhrase
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getIntentRule());
								}
								add(
									$current,
									"trainingPhrases",
									lv_trainingPhrases_15_0,
									"org.xtext.DialogflowConfig.TrainingPhrase");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
		)?
		(
			otherlv_16='response'
			{
				newLeafNode(otherlv_16, grammarAccess.getIntentAccess().getResponseKeyword_5_0());
			}
			(
				(
					lv_responses_17_0=RULE_STRING
					{
						newLeafNode(lv_responses_17_0, grammarAccess.getIntentAccess().getResponsesSTRINGTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIntentRule());
						}
						addWithLastConsumed(
							$current,
							"responses",
							lv_responses_17_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)+
		)?
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getIntentAccess().getUnorderedGroup_6());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getIntentAccess().getUnorderedGroup_6(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getIntentAccess().getUnorderedGroup_6(), 0);
					}
								({true}?=>((
									lv_webHook_19_0='webhook'
									{
										newLeafNode(lv_webHook_19_0, grammarAccess.getIntentAccess().getWebHookWebhookKeyword_6_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getIntentRule());
										}
										setWithLastConsumed($current, "webHook", true, "webhook");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIntentAccess().getUnorderedGroup_6());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getIntentAccess().getUnorderedGroup_6(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getIntentAccess().getUnorderedGroup_6(), 1);
					}
								({true}?=>((
									lv_webHookForSlotFilling_20_0='webhook_for_slot_filling'
									{
										newLeafNode(lv_webHookForSlotFilling_20_0, grammarAccess.getIntentAccess().getWebHookForSlotFillingWebhook_for_slot_fillingKeyword_6_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getIntentRule());
										}
										setWithLastConsumed($current, "webHookForSlotFilling", true, "webhook_for_slot_filling");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIntentAccess().getUnorderedGroup_6());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getIntentAccess().getUnorderedGroup_6());
				}
		)
	)
;

// Entry rule entryRuleInputContext
entryRuleInputContext returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputContextRule()); }
	iv_ruleInputContext=ruleInputContext
	{ $current=$iv_ruleInputContext.current; }
	EOF;

// Rule InputContext
ruleInputContext returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getInputContextRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getInputContextAccess().getTypeEntityTypeCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleOutputContext
entryRuleOutputContext returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputContextRule()); }
	iv_ruleOutputContext=ruleOutputContext
	{ $current=$iv_ruleOutputContext.current; }
	EOF;

// Rule OutputContext
ruleOutputContext returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOutputContextRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getOutputContextAccess().getTypeEntityTypeCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='lifespan'
			{
				newLeafNode(otherlv_1, grammarAccess.getOutputContextAccess().getLifespanKeyword_1_0());
			}
			(
				(
					lv_lifespan_2_0=RULE_INT
					{
						newLeafNode(lv_lifespan_2_0, grammarAccess.getOutputContextAccess().getLifespanINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOutputContextRule());
						}
						setWithLastConsumed(
							$current,
							"lifespan",
							lv_lifespan_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleTrainingPhrase
entryRuleTrainingPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTrainingPhraseRule()); }
	iv_ruleTrainingPhrase=ruleTrainingPhrase
	{ $current=$iv_ruleTrainingPhrase.current; }
	EOF;

// Rule TrainingPhrase
ruleTrainingPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getTrainingPhraseAccess().getDataAbstractWordParserRuleCall_0());
			}
			lv_data_0_0=ruleAbstractWord
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getTrainingPhraseRule());
				}
				add(
					$current,
					"data",
					lv_data_0_0,
					"org.xtext.DialogflowConfig.AbstractWord");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleAbstractWord
entryRuleAbstractWord returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractWordRule()); }
	iv_ruleAbstractWord=ruleAbstractWord
	{ $current=$iv_ruleAbstractWord.current; }
	EOF;

// Rule AbstractWord
ruleAbstractWord returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractWordAccess().getTextParserRuleCall_0());
		}
		this_Text_0=ruleText
		{
			$current = $this_Text_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractWordAccess().getTokenParserRuleCall_1());
		}
		this_Token_1=ruleToken
		{
			$current = $this_Token_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleText
entryRuleText returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextRule()); }
	iv_ruleText=ruleText
	{ $current=$iv_ruleText.current; }
	EOF;

// Rule Text
ruleText returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_text_0_0=RULE_STRING
			{
				newLeafNode(lv_text_0_0, grammarAccess.getTextAccess().getTextSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTextRule());
				}
				setWithLastConsumed(
					$current,
					"text",
					lv_text_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleToken
entryRuleToken returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTokenRule()); }
	iv_ruleToken=ruleToken
	{ $current=$iv_ruleToken.current; }
	EOF;

// Rule Token
ruleToken returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTokenRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getTokenAccess().getTypeEntityTypeCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getParameterAccess().getTypeEntityTypeCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{ 
					  getUnorderedGroupHelper().enter(grammarAccess.getParameterAccess().getUnorderedGroup_1_1());
					}
					(
						(
				(
					{getUnorderedGroupHelper().canSelect(grammarAccess.getParameterAccess().getUnorderedGroup_1_1(), 0)}?=>(
						{
							getUnorderedGroupHelper().select(grammarAccess.getParameterAccess().getUnorderedGroup_1_1(), 0);
						}
									({true}?=>((
										lv_required_3_0='required'
										{
											newLeafNode(lv_required_3_0, grammarAccess.getParameterAccess().getRequiredRequiredKeyword_1_1_0_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getParameterRule());
											}
											setWithLastConsumed($current, "required", true, "required");
										}
									)
									))
						{ 
							getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParameterAccess().getUnorderedGroup_1_1());
						}
					)
				)|
				(
					{getUnorderedGroupHelper().canSelect(grammarAccess.getParameterAccess().getUnorderedGroup_1_1(), 1)}?=>(
						{
							getUnorderedGroupHelper().select(grammarAccess.getParameterAccess().getUnorderedGroup_1_1(), 1);
						}
									({true}?=>((
										lv_list_4_0='list'
										{
											newLeafNode(lv_list_4_0, grammarAccess.getParameterAccess().getListListKeyword_1_1_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getParameterRule());
											}
											setWithLastConsumed($current, "list", true, "list");
										}
									)
									))
						{ 
							getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParameterAccess().getUnorderedGroup_1_1());
						}
					)
				)
						)*
					)
				)
					{ 
					  getUnorderedGroupHelper().leave(grammarAccess.getParameterAccess().getUnorderedGroup_1_1());
					}
			)
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getParameterAccess().getRightParenthesisKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleEntityType
entryRuleEntityType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityTypeRule()); }
	iv_ruleEntityType=ruleEntityType
	{ $current=$iv_ruleEntityType.current; }
	EOF;

// Rule EntityType
ruleEntityType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Type'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntityTypeAccess().getTypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEntityTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				(
					lv_dynamic_2_0='dynamic'
					{
						newLeafNode(lv_dynamic_2_0, grammarAccess.getEntityTypeAccess().getDynamicDynamicKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntityTypeRule());
						}
						setWithLastConsumed($current, "dynamic", true, "dynamic");
					}
				)
			)
			    |
			(
				(
					lv_builtIn_3_0='builtin'
					{
						newLeafNode(lv_builtIn_3_0, grammarAccess.getEntityTypeAccess().getBuiltInBuiltinKeyword_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntityTypeRule());
						}
						setWithLastConsumed($current, "builtIn", true, "builtin");
					}
				)
			)
			    |
			(
				otherlv_4='values'
				{
					newLeafNode(otherlv_4, grammarAccess.getEntityTypeAccess().getValuesKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEntityTypeAccess().getValuesEntityParserRuleCall_2_2_1_0());
						}
						lv_values_5_0=ruleEntity
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEntityTypeRule());
							}
							add(
								$current,
								"values",
								lv_values_5_0,
								"org.xtext.DialogflowConfig.Entity");
							afterParserOrEnumRuleCall();
						}
					)
				)+
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getEntityTypeAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEntityTypeAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getEntityTypeAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>(otherlv_7='state'
								{
									newLeafNode(otherlv_7, grammarAccess.getEntityTypeAccess().getStateKeyword_3_0_0());
								}
								(
									(
										lv_isOverridable_8_0='overridable'
										{
											newLeafNode(lv_isOverridable_8_0, grammarAccess.getEntityTypeAccess().getIsOverridableOverridableKeyword_3_0_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getEntityTypeRule());
											}
											setWithLastConsumed($current, "isOverridable", true, "overridable");
										}
									)
								)?
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntityTypeAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEntityTypeAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getEntityTypeAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>((
									lv_isEnum_9_0='enum'
									{
										newLeafNode(lv_isEnum_9_0, grammarAccess.getEntityTypeAccess().getIsEnumEnumKeyword_3_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getEntityTypeRule());
										}
										setWithLastConsumed($current, "isEnum", true, "enum");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntityTypeAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEntityTypeAccess().getUnorderedGroup_3(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getEntityTypeAccess().getUnorderedGroup_3(), 2);
					}
								({true}?=>((
									lv_automatedExpansion_10_0='auto_expand'
									{
										newLeafNode(lv_automatedExpansion_10_0, grammarAccess.getEntityTypeAccess().getAutomatedExpansionAuto_expandKeyword_3_2_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getEntityTypeRule());
										}
										setWithLastConsumed($current, "automatedExpansion", true, "auto_expand");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntityTypeAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEntityTypeAccess().getUnorderedGroup_3(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getEntityTypeAccess().getUnorderedGroup_3(), 3);
					}
								({true}?=>((
									lv_allowFuzzyExtraction_11_0='fuzzy_extract'
									{
										newLeafNode(lv_allowFuzzyExtraction_11_0, grammarAccess.getEntityTypeAccess().getAllowFuzzyExtractionFuzzy_extractKeyword_3_3_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getEntityTypeRule());
										}
										setWithLastConsumed($current, "allowFuzzyExtraction", true, "fuzzy_extract");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntityTypeAccess().getUnorderedGroup_3());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getEntityTypeAccess().getUnorderedGroup_3())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getEntityTypeAccess().getUnorderedGroup_3());
				}
		)?
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_STRING
				{
					newLeafNode(lv_name_0_0, grammarAccess.getEntityAccess().getNameSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getEntityAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					lv_synonyms_2_0=RULE_STRING
					{
						newLeafNode(lv_synonyms_2_0, grammarAccess.getEntityAccess().getSynonymsSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntityRule());
						}
						addWithLastConsumed(
							$current,
							"synonyms",
							lv_synonyms_2_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)*
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getEntityAccess().getRightParenthesisKeyword_1_2());
			}
		)?
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
